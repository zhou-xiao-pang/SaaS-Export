<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.module.ModuleDao">
    <resultMap id="ModuleBaseMap" type="module">
        <id column="module_id" property="id" />
        <result column="parent_id" property="parentId" />
        <result column="parent_name" property="parentName" />
        <result column="name" property="name" />
        <result column="layer_num" property="layerNum" />
        <result column="is_leaf" property="isLeaf" />
        <result column="ico" property="ico" />
        <result column="cpermission" property="cpermission" />
        <result column="curl" property="curl" />
        <result column="ctype" property="ctype" />
        <result column="state" property="state" />
        <result column="belong" property="belong" />
        <result column="cwhich" property="cwhich" />
        <result column="quote_num" property="quoteNum" />
        <result column="remark" property="remark" />
        <result column="order_no"  property="orderNo" />
    </resultMap>
    <select id="findAll" resultMap="ModuleBaseMap">
        select * from ss_module
    </select>

    <insert id="save" parameterType="module">
        insert into ss_module (
        module_id, parent_id, parent_name, name, layer_num, is_leaf,ico, cpermission, curl, ctype, state, belong, cwhich, quote_num,remark, order_no
         ) values (
            #{id}, #{parentId}, #{parentName}, #{name}, #{layerNum}, #{isLeaf},#{ico}, #{cpermission}, #{curl}, #{ctype}, #{state}, #{belong}, #{cwhich}, #{quoteNum},#{remark}, #{orderNo}
        )
    </insert>

    <select id="findById" resultMap="ModuleBaseMap">
        select * from ss_module where module_id=#{id}
    </select>

    <update id="update" parameterType="module">
        update ss_module set
        parent_id = #{parentId},
        parent_name = #{parentName},
        name = #{name},
        layer_num = #{layerNum},
        is_leaf = #{isLeaf},
        ico = #{ico},
        cpermission = #{cpermission},
        curl = #{curl},
        ctype = #{ctype},
        state = #{state},
        belong = #{belong},
        cwhich = #{cwhich},
        quote_num = #{quoteNum},
        remark = #{remark},
        order_no = #{orderNo}
        where module_id = #{id}
    </update>

    <delete id="delete" parameterType="string">
        delete from ss_module where module_id = #{id}
    </delete>
<!--    根据roleid查询改角色下现有的模块-->
    <select id="findRoleModuleList" resultMap="ModuleBaseMap">
        SELECT m.* FROM ss_module m INNER JOIN pe_role_module rm ON m.module_id = rm.module_id WHERE rm.role_id = #{roleid}
    </select>

<!--    删除改角色下的所有模块-->
    <delete id="deleteModuleByRoleId" parameterType="string">
        delete from pe_role_module where role_id=#{roleid}
    </delete>

<!--为该角色添加该模块-->
    <insert id="insertRoleModule">
        insert into pe_role_module(role_id,module_id) values (#{roleid},#{moduleIde})
    </insert>

<!--    //查询平台管理员的菜单-->
    <select id="findAdmin" resultMap="ModuleBaseMap">
        select * from ss_module where belong=#{belong}
    </select>

<!--      //根据用户id查询他的菜单  -->
    <select id="findUserModules" resultMap="ModuleBaseMap">
        SELECT * FROM ss_module WHERE module_id IN (
        SELECT DISTINCT rm.module_id FROM pe_role_user ru INNER JOIN pe_role_module rm ON ru.role_id = rm.role_id WHERE ru.user_id = #{id}
        )
    </select>

</mapper>